This code provides an example mechanism for exploiting CSM 2.A plugins and sensor models using CSM3.0.1 
See https://github.com/sminster/csm.

Authors
-------
This code was primarily written by Scott Minster and John Karp of Harris Corporation.

Compiling
---------
This library can theoretically be compiled on Linux i386, x86_64, or IA-64, Solaris Sparc (32 or 64 bit, with or without the "stlport" mode) and x86, and Windows by using the appropriate Makefile when building.  Rudmentary testing has been performed to verify successful compilation on these platforms

Ex.    make -f Makefile.linux64 all install clean  will build a Linux x86_64 binary

The build requires the CSM3 and TSM2A library and include files.  These can be set in the Makefile, or set on the command line:

  make -f Makefile.linux64 all install clean CSMHOME=/path/to/csm3 TSMHOME=/path/to/tsm2a

By default, the built files are placed in an architecture subdirectory in the build area.  This allows multiple architectures to be built.  To specify a different intallation directory, set the INSTDIR make variable:

  make -f Makefile.linux64 all install clean INSTDIR=/path/to/csm3/install/dir

Compiling makes a csm2to3 shared library (libcsm2to3.so.1.0 on UNIX, csm2to3.dll on Windows) that can be loaded by CSM clients (Sensor Exploitation Tools, or SETs).

TODO
----
* Come up with better way to locate CSM and TSM libraries.  Maybe autoconf?

* There are complications associated with sucessfully loading the TSM Plugins which this code "wraps", such as determining where to find those library files and setting the appropriate environment variables.  If the 2A plugins are already loaded, then this plugin should detect them and translate them to the CSM3 interface.

* csm2to3model::getCrossCovarianceMatrix() is not fully implemented.



